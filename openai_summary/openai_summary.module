<?php
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Ajax\AjaxResponse;
use Drupal\Core\Ajax\ReplaceCommand;
use Drupal\Core\Ajax\AlertCommand;

/**
 * Implements hook_form_alter().
 */
function openai_summary_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if (isset($form['body'])) {
    $form['#attached']['library'][] = 'openai_summary/openai_summary_helper';
    $form['body']['#suffix'] = '<span class="openai-btn openai-summary-btn">OpenAI Summary</span>';
    $form['actions']['fill_summary'] = [
      '#type' => 'button',
      '#value' => t('Fill Summary'),
      '#ajax' => [
        'callback' => 'openai_summary_generate_text_callback',
        'event' => 'click',
      ],
    ];
  }
}

/**
 * Form submit callback for generating text.
 */
function openai_summary_generate_text_callback(&$form, FormStateInterface $form_state) {
  $response = new AjaxResponse();
  if ($form_state->getValue('body')[0]['value'] != '') {
    $promptIntro = 'Write a summary, with a maximum of 100 words, using Plain Language, with no markup, of the following: ';
    $prompt = strip_tags($form_state->getValue('body')[0]['value']);
    $openaiService = \Drupal::service('azure_openai.service');
    $generatedText = $openaiService->request($promptIntro . $prompt);
    $form['body']['widget'][0]['summary']['#value'] = ltrim($generatedText);
    $form['body']['#suffix'] = '';
    $response->addCommand(new ReplaceCommand('#edit-body-wrapper', $form['body']));
  }
  else {
    $form_state->setErrorByName('body', t('Please fill in the required field first.'));
    $response->addCommand(new AlertCommand(t('Please fill in the required field first.')));
  }
  return $response;
}
